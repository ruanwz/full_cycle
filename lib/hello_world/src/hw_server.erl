%%%-------------------------------------------------------------------
%%% @doc  The hello world server. 
%%% @end
%%%-------------------------------------------------------------------
-module(hw_server).

%%--------------------------------------------------------------------
%% External exports
%%--------------------------------------------------------------------
-export([
         start_link/0,
	 init/1
        ]).

%%--------------------------------------------------------------------
%% macro definitions
%%--------------------------------------------------------------------
-define(SERVER, hello_world_server).

%%====================================================================
%% External functions
%%====================================================================

%%--------------------------------------------------------------------
%% @doc Starts the server.
%% @spec start_link() -> {ok, pid()} | {error, Reason}
%% @end
%%--------------------------------------------------------------------
start_link() ->
    proc_lib:start(?MODULE, init, [self()]).

%%====================================================================
%% Callback Functions
%%====================================================================

%%--------------------------------------------------------------------
%% @doc Called before the process start functions can return.  
%% @spec init(Parent::pid()) -> void()
%% @end
%%--------------------------------------------------------------------
init(Parent) ->
    register(?SERVER, self()),
    proc_lib:init_ack(Parent, {ok, self()}),
    loop().
    

%%====================================================================
%% Internal Functions
%%====================================================================
loop() ->
    receive
	Pid when is_pid(Pid) -> Pid ! {ok, hello_world};
	_Msg                 -> ok
    end,
    loop().
